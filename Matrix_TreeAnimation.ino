/* Arduino 256 RGB LEDs Matrix Animation Frame 
 * Using WS2812 LED Strips
 
Created by Yvan / https://Brainy-Bits.com

This code is in the public domain...

You can: copy it, use it, modify it, share it or just plain ignore it!
Thx!

*/

#include <avr/pgmspace.h>  // Needed to store stuff in Flash using PROGMEM
#include "FastLED.h"       // Fastled library to control the LEDs

// How many leds are connected?
#define NUM_LEDS 150

// Define the Data Pin
#define DATA_PIN 3  // Connected to the data pin of the first LED strip

// Define the array of leds
CRGB leds[NUM_LEDS];

#define COLOR_ORDER RGB

// Create the array of retro arcade characters and store it in Flash memory
const long Tree01[] PROGMEM =
{
0xFFFFFF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFD700, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x006400, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x006400, 0x008000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x006400, 0x008000, 0x800080, 0x008000, 0x006400, 0x000000, 0x000000, 0xFFFFFF, 
0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0xFFD700, 0x008000, 0x008000, 0x008000, 0x000000, 
0x000000, 0x000000, 0x006400, 0x008000, 0x008000, 0x008000, 0x006400, 0x000000, 0x000000, 0x000000, 
0x000000, 0x006400, 0x008000, 0xFFD700, 0x008000, 0x008000, 0x800080, 0x006400, 0x008000, 0x000000, 
0xFFFFFF, 0x000000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x008000, 0x800080, 0x008000, 0x008000, 0x006400, 0xFFD700, 0x000000, 0x000000, 
0x000000, 0x006400, 0x008000, 0x008000, 0x008000, 0xFFD700, 0x008000, 0x006400, 0x008000, 0x000000, 
0x006400, 0x008000, 0xFFD700, 0x008000, 0x008000, 0x008000, 0x800080, 0x008000, 0x006400, 0x006400, 
0x000000, 0x000000, 0x000000, 0x000000, 0xA52A2A, 0xA52A2A, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 
0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xA52A2A, 0xA52A2A, 0x000000, 0x000000, 0x000000, 0x000000, 
0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF
};

const long Tree02[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFD700, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 
0x000000, 0x000000, 0x000000, 0x000000, 0x006400, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x006400, 0x008000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x006400, 0x008000, 0x800080, 0x008000, 0x006400, 0x000000, 0x000000, 0x000000, 
0xFFFFFF, 0x000000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x000000, 
0x000000, 0x000000, 0x006400, 0x008000, 0x008000, 0x008000, 0x006400, 0x000000, 0x000000, 0x000000, 
0x000000, 0x006400, 0x008000, 0x008000, 0x008000, 0x008000, 0x800080, 0x006400, 0x008000, 0x000000, 
0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x008000, 0x800080, 0x008000, 0x008000, 0x006400, 0x008000, 0x000000, 0xFFFFFF, 
0x000000, 0x006400, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x006400, 0x008000, 0x000000, 
0x006400, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x800080, 0x008000, 0x006400, 0x006400, 
0x000000, 0x000000, 0x000000, 0x000000, 0xA52A2A, 0xA52A2A, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xA52A2A, 0xA52A2A, 0x000000, 0x000000, 0x000000, 0x000000, 
0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF
};
const long Tree03[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFD700, 0x000000, 0x000000, 0x000000, 0x000000, 
0xFFFFFF, 0x000000, 0x000000, 0x000000, 0x006400, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x006400, 0x008000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x006400, 0x008000, 0x800080, 0x008000, 0x006400, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0xFFD700, 0x008000, 0x008000, 0x008000, 0x000000, 
0x000000, 0x000000, 0x006400, 0x008000, 0x008000, 0x008000, 0x006400, 0x000000, 0x000000, 0x000000, 
0xFFFFFF, 0x006400, 0x008000, 0xFFD700, 0x008000, 0x008000, 0x800080, 0x006400, 0x008000, 0x000000, 
0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x008000, 0x800080, 0x008000, 0x008000, 0x006400, 0xFFD700, 0x000000, 0x000000, 
0xFFFFFF, 0x006400, 0x008000, 0x008000, 0x008000, 0xFFD700, 0x008000, 0x006400, 0x008000, 0x000000, 
0x006400, 0x008000, 0xFFD700, 0x008000, 0x008000, 0x008000, 0x800080, 0x008000, 0x006400, 0x006400, 
0x000000, 0x000000, 0x000000, 0x000000, 0xA52A2A, 0xA52A2A, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0xA52A2A, 0xA52A2A, 0x000000, 0x000000, 0x000000, 0x000000, 
0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF
};
const long Tree04[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFD700, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x006400, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x006400, 0x008000, 0x000000, 0x000000, 0xFFFFFF, 
0x000000, 0x000000, 0x006400, 0x008000, 0x800080, 0x008000, 0x006400, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x000000, 
0x000000, 0x000000, 0x006400, 0x008000, 0x008000, 0x008000, 0x006400, 0x000000, 0x000000, 0x000000, 
0x000000, 0x006400, 0x008000, 0x008000, 0x008000, 0x008000, 0x800080, 0x006400, 0x008000, 0x000000, 
0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x000000, 0xFFFFFF, 
0x000000, 0x000000, 0x008000, 0x800080, 0x008000, 0x008000, 0x006400, 0x008000, 0x000000, 0x000000, 
0x000000, 0x006400, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x006400, 0x008000, 0x000000, 
0x006400, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x800080, 0x008000, 0x006400, 0x006400, 
0x000000, 0x000000, 0x000000, 0x000000, 0xA52A2A, 0xA52A2A, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0xA52A2A, 0xA52A2A, 0x000000, 0x000000, 0x000000, 0x000000, 
0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF
};
const long Tree05[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFD700, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x006400, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x006400, 0x008000, 0x000000, 0x000000, 0x000000, 
0xFFFFFF, 0x000000, 0x006400, 0x008000, 0x800080, 0x008000, 0x006400, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0xFFD700, 0x008000, 0x008000, 0x008000, 0x000000, 
0x000000, 0x000000, 0x006400, 0x008000, 0x008000, 0x008000, 0x006400, 0x000000, 0x000000, 0x000000, 
0x000000, 0x006400, 0x008000, 0xFFD700, 0x008000, 0x008000, 0x800080, 0x006400, 0x008000, 0x000000, 
0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 
0xFFFFFF, 0x000000, 0x008000, 0x800080, 0x008000, 0x008000, 0x006400, 0xFFD700, 0x000000, 0x000000, 
0x000000, 0x006400, 0x008000, 0x008000, 0x008000, 0xFFD700, 0x008000, 0x006400, 0x008000, 0x000000, 
0x006400, 0x008000, 0xFFD700, 0x008000, 0x008000, 0x008000, 0x800080, 0x008000, 0x006400, 0x006400, 
0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xA52A2A, 0xA52A2A, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0xA52A2A, 0xA52A2A, 0x000000, 0x000000, 0x000000, 0x000000, 
0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF
};
const long Tree06[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0xFFD700, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x006400, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x006400, 0x008000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x006400, 0x008000, 0x800080, 0x008000, 0x006400, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0xFFFFFF, 
0x000000, 0x000000, 0x006400, 0x008000, 0x008000, 0x008000, 0x006400, 0x000000, 0x000000, 0x000000, 
0x000000, 0x006400, 0x008000, 0x008000, 0x008000, 0x008000, 0x800080, 0x006400, 0x008000, 0x000000, 
0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x008000, 0x800080, 0x008000, 0x008000, 0x006400, 0x008000, 0x000000, 0x000000, 
0x000000, 0x006400, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x006400, 0x008000, 0xFFFFFF, 
0x006400, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x800080, 0x008000, 0x006400, 0x006400, 
0x000000, 0x000000, 0x000000, 0x000000, 0xA52A2A, 0xA52A2A, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0xA52A2A, 0xA52A2A, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 
0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF
};
const long Tree07[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFD700, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x006400, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x006400, 0x008000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x006400, 0x008000, 0x800080, 0x008000, 0x006400, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0xFFD700, 0x008000, 0x008000, 0x008000, 0x000000, 
0xFFFFFF, 0x000000, 0x006400, 0x008000, 0x008000, 0x008000, 0x006400, 0x000000, 0x000000, 0x000000, 
0x000000, 0x006400, 0x008000, 0xFFD700, 0x008000, 0x008000, 0x800080, 0x006400, 0x008000, 0x000000, 
0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x008000, 0x800080, 0x008000, 0x008000, 0x006400, 0xFFD700, 0x000000, 0x000000, 
0x000000, 0x006400, 0x008000, 0x008000, 0x008000, 0xFFD700, 0x008000, 0x006400, 0x008000, 0x000000, 
0x006400, 0x008000, 0xFFD700, 0x008000, 0x008000, 0x008000, 0x800080, 0x008000, 0x006400, 0x006400, 
0x000000, 0x000000, 0x000000, 0x000000, 0xA52A2A, 0xA52A2A, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0xA52A2A, 0xA52A2A, 0x000000, 0x000000, 0x000000, 0x000000, 
0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF
};
const long Tree08[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFD700, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x006400, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xFFFFFF, 0x008000, 0x006400, 0x008000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x006400, 0x008000, 0x800080, 0x008000, 0x006400, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x000000, 
0x000000, 0x000000, 0x006400, 0x008000, 0x008000, 0x008000, 0x006400, 0x000000, 0x000000, 0x000000, 
0x000000, 0x006400, 0x008000, 0x008000, 0x008000, 0x008000, 0x800080, 0x006400, 0x008000, 0xFFFFFF, 
0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x008000, 0x800080, 0x008000, 0x008000, 0x006400, 0x008000, 0x000000, 0x000000, 
0x000000, 0x006400, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x006400, 0x008000, 0x000000, 
0x006400, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x800080, 0x008000, 0x006400, 0x006400, 
0x000000, 0x000000, 0x000000, 0x000000, 0xA52A2A, 0xA52A2A, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 
0x000000, 0x000000, 0x000000, 0x000000, 0xA52A2A, 0xA52A2A, 0x000000, 0x000000, 0x000000, 0x000000, 
0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF
};

void setup() { 
FastLED.addLeds<WS2811,DATA_PIN,COLOR_ORDER>(leds, NUM_LEDS);  // Init of the Fastled library
FastLED.setBrightness(150);
}

void loop() { 


// Put Tree first frame
for(int passtime = 0; passtime < 8; passtime++) {

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) {
    leds[i] = pgm_read_dword(&(Tree01[i]));
  }

FastLED.show();
delay(250);


// Put DigDug second frame
FastLED.clear();
for(int i = 0; i <NUM_LEDS; i++) {
    leds[i] = pgm_read_dword(&(Tree02[i]));
  }

FastLED.show();
delay(250);

FastLED.clear();
for(int i = 0; i <NUM_LEDS; i++) {
    leds[i] = pgm_read_dword(&(Tree03[i]));
  }

FastLED.show();
delay(250);
FastLED.clear();
for(int i = 0; i <NUM_LEDS; i++) {
    leds[i] = pgm_read_dword(&(Tree04[i]));
  }

FastLED.show();
delay(250);
FastLED.clear();
for(int i = 0; i <NUM_LEDS; i++) {
    leds[i] = pgm_read_dword(&(Tree05[i]));
  }

FastLED.show();
delay(250);

FastLED.clear();
for(int i = 0; i <NUM_LEDS; i++) {
    leds[i] = pgm_read_dword(&(Tree06[i]));
  }

FastLED.show();
delay(250);

FastLED.clear();
for(int i = 0; i <NUM_LEDS; i++) {
    leds[i] = pgm_read_dword(&(Tree07[i]));
  }

FastLED.show();
delay(250);

FastLED.clear();
for(int i = 0; i <NUM_LEDS; i++) {
    leds[i] = pgm_read_dword(&(Tree08[i]));
  }

FastLED.show();
delay(250);


}
}
